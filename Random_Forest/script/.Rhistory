library(DECIPHER)
library(phangorn)
library(ShortRead)
library(dada2)
library(ampvis2)
library(devtools)
library(stringr)
library(glue)
library(gridExtra)
#library(phylogeo)
library(ggvegan)
library(microbiomeSeq)
library(metacoder)
library(vegan)
library(corrplot)
library(Hmisc)
library(lme4)
library(nlme)
library(car)
source('~/theme_publication.R')
# transforming macro minerals into mg/kg.
map.table <- read.csv("../results/tables/map_table.csv", sep = "\t" ) %>%
filter(!str_detect(Sample_ID, "s")) %>%
mutate_at(13:16, function(x) x*10000)
# make cations standardize
map.table.s <- scale(map.table[,13:24])
map.table.s <- cbind(map.table[,1:12], map.table.s)
View(map.table)
mat <- as.matrix(map.table[,11:24])
res2 <- rcorr(mat) # applying functions for correlation
corrplot(res2$r, type="upper",
p.mat = res2$P, sig.level = 0.01, insig = "blank",tl.cex=2, tl.col = "black") # plotting function
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reshape2)
library(permute)
library(lattice)
library(scales)
library(grid)
library(phyloseq)
library(ape)
library(metagMisc)
library(png)
library(data.table)
library(RColorBrewer)
library(ggsci)
library(DECIPHER)
library(phangorn)
library(ShortRead)
library(dada2)
library(ampvis2)
library(devtools)
library(stringr)
library(glue)
library(gridExtra)
#library(phylogeo)
library(ggvegan)
library(microbiomeSeq)
library(microbiomeSeq)
library(metacoder)
library(vegan)
library(corrplot)
library(Hmisc)
library(lme4)
library(nlme)
library(car)
source('~/theme_publication.R')
ps.sv<- readRDS("../results/tables/ps_sv.rds")
ps.f <- phyloseq_filter_prevalence(ps.sv, prev.trh = 0.01, abund.trh = 20,
threshold_condition = "OR", abund.type = "total")
sampledata2 <- data.frame(sample_data(ps.f)) %>%
mutate(Dom_event=ifelse(str_detect(.$Subpopulation, "M"), "Mesoamerica", "Ande")) %>%
unite("Dom_event", Dom_event, Status, sep = "_")
ps.f@sam_data <- sample_data(sampledata2)
for (taxonomy in c("Phylum", "Genus")) {
ps_fg<-taxa_level(ps.f, paste0(taxonomy)) # this is to agglomerate information per taxa level. This function takes a physeq object and returns a physeq object with taxa at a specified taxonomic level. It extends the tax_glom to include names of corresponding taxa at a specified taxonomy level and updating tree tip labels accordingly.
physeq <- normalise_data(ps_fg, norm.method = "relative")
print(plot_taxa(physeq,grouping_column="Dom_event",method="hellinger",number.taxa=10,filename=NULL)+
theme_bw(base_size = 14, base_family = "Times")+
theme(axis.text.x = element_text(angle = 90)))
ggsave(paste0("../results/plots/", taxonomy, ".svg"), width = 15, height = 8, units = "cm")
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reshape2)
library(permute)
library(lattice)
library(scales)
library(grid)
library(phyloseq)
library(ape)
library(metagMisc)
library(png)
library(data.table)
library(RColorBrewer)
library(ggsci)
library(DECIPHER)
library(phangorn)
library(ShortRead)
library(dada2)
library(ampvis2)
library(devtools)
library(stringr)
library(glue)
library(gridExtra)
library(microbiomeSeq)
library(metacoder)
library(vegan)
library(corrplot)
library(Hmisc)
library(lme4)
library(nlme)
library(car)
source('~/theme_publication.R')
ps.sv<- readRDS("../results/tables/ps_sv.rds")
ps.f <- phyloseq_filter_prevalence(ps.sv, prev.trh = 0.01, abund.trh = 20,
threshold_condition = "OR", abund.type = "total")
sampledata2 <- data.frame(sample_data(ps.f)) %>%
mutate(Dom_event=ifelse(str_detect(.$Subpopulation, "M"), "Mesoamerica", "Ande")) %>%
unite("Dom_event", Dom_event, Status, sep = "_")
ps.f@sam_data <- sample_data(sampledata2)
for (taxonomy in c("Phylum", "Genus")) {
ps_fg<-taxa_level(ps.f, paste0(taxonomy)) # this is to agglomerate information per taxa level. This function takes a physeq object and returns a physeq object with taxa at a specified taxonomic level. It extends the tax_glom to include names of corresponding taxa at a specified taxonomy level and updating tree tip labels accordingly.
physeq <- normalise_data(ps_fg, norm.method = "relative")
print(plot_taxa(physeq,grouping_column="Dom_event",method="hellinger",number.taxa=10,filename=NULL)+
theme_bw(base_size = 14, base_family = "Times")+
theme(axis.text.x = element_text(angle = 90)))
ggsave(paste0("../results/plots/", taxonomy, ".svg"), width = 15, height = 10, units = "cm")
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reshape2)
library(permute)
library(lattice)
library(scales)
library(grid)
library(phyloseq)
library(ape)
library(metagMisc)
library(png)
library(data.table)
library(RColorBrewer)
library(ggsci)
library(DECIPHER)
library(phangorn)
library(ShortRead)
library(dada2)
library(ampvis2)
library(devtools)
library(stringr)
library(glue)
library(gridExtra)
#library(phylogeo)
library(ggvegan)
# transforming macro minerals into mg/kg.
map.table <- read.csv("../results/tables/map_table.csv", sep = "\t" ) %>%
filter(!str_detect(Sample_ID, "s")) %>%
mutate_at(13:16, function(x) x*10000)
# make cations standardize
map.table.s <- scale(map.table[,13:24])
map.table.s <- cbind(map.table[,1:12], map.table.s)
cat.veg <- map.table.s %>%
select(Sample_ID, 13:24)
rownames(cat.veg) <- cat.veg$Sample_ID
cat.veg <- cat.veg[,-1]
# PCA
env.pca <- rda(cat.veg, scale=FALSE)
# manual plotting of PCA
smry <- summary(env.pca)
cat.veg <- map.table.s %>%
select(Sample_ID, 13:24)
rownames(cat.veg) <- cat.veg$Sample_ID
cat.veg <- cat.veg[,-1]
# PCA
env.pca <- rda(cat.veg, scale=FALSE)
library(microbiomeSeq)
library(microbiomeSeq)
library(metacoder)
library(vegan)
library(corrplot)
library(Hmisc)
library(lme4)
library(nlme)
library(car)
source('~/theme_publication.R')
# PCA
env.pca <- rda(cat.veg, scale=FALSE)
# manual plotting of PCA
smry <- summary(env.pca)
df1  <- data.frame(smry$sites[,1:2])# PC1 and PC2 for sites
df1$ID <- rownames(df1)
# extracting descriptive variables
var <- map.table.s %>%
select(Sample_ID,Status, Subpopulation) %>%
dplyr::rename(ID=Sample_ID)
df1.1 <- left_join(df1, var, by="ID")
rownames(df1.1) <- df1.1$ID
df1.1 <- df1.1 %>%
select(PC1,PC2,Subpopulation, ID)
(plot2 <- ggplot(df1.1, aes(x=PC1*2, y=PC2*2)) +
geom_point(aes(color=Subpopulation),size=1.5,alpha=0.4)+
geom_hline(yintercept=0, linetype="dotted") +
geom_vline(xintercept=0, linetype="dotted") +
coord_fixed()+
ylim(-4,3.5)+
xlim(-3, 5)+theme_Publication(base_size = 10, base_family = "Times")+
ylab("PC2 (17%)")+
xlab("PC1 (20%)"))
# make cations standardize
map.table.s <- scale(map.table[,13:24])
map.table.s <- cbind(map.table[,1:12], map.table.s)
cat.veg <- map.table.s %>%
select(Sample_ID, 13:24)
rownames(cat.veg) <- cat.veg$Sample_ID
cat.veg <- cat.veg[,-1]
# PCA
env.pca <- rda(cat.veg, scale=FALSE)
# manual plotting of PCA
smry <- summary(env.pca)
df1  <- data.frame(smry$sites[,1:2])# PC1 and PC2 for sites
df1$ID <- rownames(df1)
# extracting descriptive variables
var <- map.table.s %>%
select(Sample_ID,Status, Subpopulation) %>%
dplyr::rename(ID=Sample_ID)
df1.1 <- left_join(df1, var, by="ID")
View(df1.1)
# extracting descriptive variables
var <- map.table.s %>%
select(Sample_ID,Status, Subpopulation) %>%
mutate(Dom_event=ifelse(str_detect(.$Subpopulation, "A"), "Ande", "Mesoamerica"), Dom_event=paste0(.$Status, "_", "Dom_event")) %>%
dplyr::rename(ID=Sample_ID)
View(var)
# extracting descriptive variables
var <- map.table.s %>%
select(Sample_ID,Status, Subpopulation) %>%
mutate(Dom_event=ifelse(str_detect(.$Subpopulation, "A"), "Ande", "Mesoamerica"), Dom_event=paste0(.$Status, "_", .$Dom_event)) %>%
dplyr::rename(ID=Sample_ID)
View(var)
# extracting descriptive variables
var <- map.table.s %>%
select(Sample_ID,Status, Subpopulation) %>%
mutate(Dom_event=ifelse(str_detect(.$Subpopulation, "A"), "Ande", "Mesoamerica"), Dom_event=paste0(.$Status, "_", Dom_event)) %>%
dplyr::rename(ID=Sample_ID)
View(var)
df1.1 <- left_join(df1, var, by="ID")
rownames(df1.1) <- df1.1$ID
df1.1 <- df1.1 %>%
select(PC1,PC2,Dom_event, ID)
(plot2 <- ggplot(df1.1, aes(x=PC1*2, y=PC2*2)) +
geom_point(aes(color=Dom_event),size=1.5,alpha=0.4)+
geom_hline(yintercept=0, linetype="dotted") +
geom_vline(xintercept=0, linetype="dotted") +
coord_fixed()+
ylim(-4,3.5)+
xlim(-3, 5)+theme_Publication(base_size = 10, base_family = "Times")+
ylab("PC2 (17%)")+
xlab("PC1 (20%)"))
(plot2 <- ggplot(df1.1, aes(x=PC1*2, y=PC2*2)) +
geom_point(aes(color=Dom_event),size=1.5,alpha=0.4)+
geom_hline(yintercept=0, linetype="dotted") +
geom_vline(xintercept=0, linetype="dotted") +
coord_fixed()+
ylim(-4,3.5)+
xlim(-3, 5)+theme_Publication(base_size = 10, base_family = "Times")+
ylab("PC2 (17%)")+
xlab("PC1 (20%)")+
scale_color_manual(values = c("Red", "orange", "dargreen", "purple")))
(plot2 <- ggplot(df1.1, aes(x=PC1*2, y=PC2*2)) +
geom_point(aes(color=Dom_event),size=1.5,alpha=0.4)+
geom_hline(yintercept=0, linetype="dotted") +
geom_vline(xintercept=0, linetype="dotted") +
coord_fixed()+
ylim(-4,3.5)+
xlim(-3, 5)+theme_Publication(base_size = 10, base_family = "Times")+
ylab("PC2 (17%)")+
xlab("PC1 (20%)")+
scale_color_manual(values = c("Red", "orange", "darkgreen", "purple")))
df2  <- data.frame(smry$species[,1:2]) %>%
arrange(desc(PC1))
df3  <- data.frame(smry$species[,1:2]) %>%
arrange(PC1)
df4  <- data.frame(smry$species[,1:2]) %>%
arrange(desc(PC2))
df5  <- data.frame(smry$species[,1:2]) %>%
arrange(PC2)
(plot3 <- plot2+ geom_segment(data=df2[1:2,], aes(x=0, xend=PC1*2, y=0, yend=PC2*2),
color="red", arrow=arrow(length=unit(0.01,"npc")))+
geom_text(data=df2[1:2,],
aes(x=PC1*2,y=PC2*2,label=rownames(df2[1:1,]),
hjust=0.5*(1-sign(PC1)),vjust=0.5*(1-sign(PC2))),
color="red", size=3)+
geom_segment(data=df3[1:2,], aes(x=0, xend=PC1*2, y=0, yend=PC2*2),
color="red", arrow=arrow(length=unit(0.01,"npc")))+
geom_text(data=df3[1:2,],
aes(x=PC1*2,y=PC2*2,label=rownames(df3[1:2,]),
hjust=0.5*(1-sign(PC1)),vjust=0.5*(1-sign(PC2))),
color="red", size=3)+
geom_segment(data=df4[1:2,], aes(x=0, xend=PC1*2, y=0, yend=PC2*2),
color="red", arrow=arrow(length=unit(0.01,"npc")))+
geom_text(data=df4[1:2,],
aes(x=PC1*2,y=PC2*2,label=rownames(df4[1:2,]),
hjust=0.5*(1-sign(PC1)),vjust=0.5*(1-sign(PC2))),
color="red", size=3)+
geom_segment(data=df5[1:2,], aes(x=0, xend=PC1*2, y=0, yend=PC2*2),
color="red", arrow=arrow(length=unit(0.01,"npc")))+
geom_text(data=df5[1:2,],
aes(x=PC1*2,y=PC2*2,label=rownames(df5[1:2,]),
hjust=0.5*(1-sign(PC1)),vjust=0.5*(1-sign(PC2))),
color="red", size=3))
ggsave("../results/plots/PCA_cations.svg", width = 7, height = 7, units = "cm")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reshape2)
library(permute)
library(lattice)
library(scales)
library(grid)
library(phyloseq)
library(ape)
library(metagMisc)
library(png)
library(data.table)
library(RColorBrewer)
library(ggsci)
library(DECIPHER)
library(phangorn)
library(ShortRead)
library(dada2)
library(ampvis2)
library(devtools)
library(stringr)
library(glue)
library(gridExtra)
#library(phylogeo)
#library(ggvegan)
library(microbiomeSeq)
library(metacoder)
library(vegan)
library(corrplot)
library(Hmisc)
library(lme4)
library(nlme)
library(car)
source('~/theme_publication.R')
# transforming macro minerals into mg/kg.
map.table <- read.csv("../results/tables/map_table.csv", sep = "\t" ) %>%
filter(!str_detect(Sample_ID, "s")) %>%
mutate_at(13:16, function(x) x*10000)
ggplot(map.table, aes(Subpopulation,Ca))+
geom_boxplot(coef=6)+
geom_jitter(size=1, alpha=0.6)+
theme_Publication(base_size = 10)+
ylab("Ca (mg/Kg)")
# make cations standardize
map.table.s <- scale(map.table[,13:24])
map.table.s <- cbind(map.table[,1:12], map.table.s)
cat.veg <- map.table.s %>%
select(Sample_ID, 13:24)
rownames(cat.veg) <- cat.veg$Sample_ID
cat.veg <- cat.veg[,-1]
# PCA
env.pca <- rda(cat.veg, scale=FALSE)
# manual plotting of PCA
smry <- summary(env.pca)
df1  <- data.frame(smry$sites[,1:2])# PC1 and PC2 for sites
df1$ID <- rownames(df1)
# extracting descriptive variables
var <- map.table.s %>%
select(Sample_ID,Status, Subpopulation) %>%
mutate(Dom_event=ifelse(str_detect(.$Subpopulation, "A"), "Ande", "Mesoamerica"), Dom_event=paste0(.$Status, "_", Dom_event)) %>%
dplyr::rename(ID=Sample_ID)
df1.1 <- left_join(df1, var, by="ID")
rownames(df1.1) <- df1.1$ID
df1.1 <- df1.1 %>%
select(PC1,PC2,Dom_event, ID)
(plot2 <- ggplot(df1.1, aes(x=PC1*2, y=PC2*2)) +
geom_point(aes(color=Dom_event),size=1.5,alpha=0.4)+
geom_hline(yintercept=0, linetype="dotted") +
geom_vline(xintercept=0, linetype="dotted") +
coord_fixed()+
ylim(-4,3.5)+
xlim(-3, 5)+theme_Publication(base_size = 10, base_family = "Times")+
ylab("PC2 (17%)")+
xlab("PC1 (20%)")+
scale_color_manual(values = c("Red", "orange", "darkgreen", "blue")))
df2  <- data.frame(smry$species[,1:2]) %>%
arrange(desc(PC1))
df3  <- data.frame(smry$species[,1:2]) %>%
arrange(PC1)
df4  <- data.frame(smry$species[,1:2]) %>%
arrange(desc(PC2))
df5  <- data.frame(smry$species[,1:2]) %>%
arrange(PC2)
(plot3 <- plot2+ geom_segment(data=df2[1:2,], aes(x=0, xend=PC1*2, y=0, yend=PC2*2),
color="red", arrow=arrow(length=unit(0.01,"npc")))+
geom_text(data=df2[1:2,],
aes(x=PC1*2,y=PC2*2,label=rownames(df2[1:1,]),
hjust=0.5*(1-sign(PC1)),vjust=0.5*(1-sign(PC2))),
color="red", size=3)+
geom_segment(data=df3[1:2,], aes(x=0, xend=PC1*2, y=0, yend=PC2*2),
color="red", arrow=arrow(length=unit(0.01,"npc")))+
geom_text(data=df3[1:2,],
aes(x=PC1*2,y=PC2*2,label=rownames(df3[1:2,]),
hjust=0.5*(1-sign(PC1)),vjust=0.5*(1-sign(PC2))),
color="red", size=3)+
geom_segment(data=df4[1:2,], aes(x=0, xend=PC1*2, y=0, yend=PC2*2),
color="red", arrow=arrow(length=unit(0.01,"npc")))+
geom_text(data=df4[1:2,],
aes(x=PC1*2,y=PC2*2,label=rownames(df4[1:2,]),
hjust=0.5*(1-sign(PC1)),vjust=0.5*(1-sign(PC2))),
color="red", size=3)+
geom_segment(data=df5[1:2,], aes(x=0, xend=PC1*2, y=0, yend=PC2*2),
color="red", arrow=arrow(length=unit(0.01,"npc")))+
geom_text(data=df5[1:2,],
aes(x=PC1*2,y=PC2*2,label=rownames(df5[1:2,]),
hjust=0.5*(1-sign(PC1)),vjust=0.5*(1-sign(PC2))),
color="red", size=3))
ggsave("../results/plots/PCA_cations.svg", width = 7, height = 7, units = "cm")
library(mlr3)
library(phyloseq)
library(mlbench)
library(tidyverse)
library(metagMisc)
library(Boruta)
library(mlr)
library(parallel)
library(rlist)
source("/home/riccardo/theme_publication.R")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
ps.sv <- readRDS("../../3.filtering/results/tables/ps_sv_filt.rds")
samp.data <- data.frame(sample_data(ps.sv)) %>%
mutate(Sample_ID=str_replace(Sample_ID, "-", ".")) %>%
mutate(Dom_event=paste0(.$Dom_event, "_", .$Status))
otu.tab <- data.frame(otu_table(ps.sv)) %>%
mutate_if(is.numeric, function(x) {x/sum(x)*100}) %>%
t() %>%
data.frame() %>%
rownames_to_column(var = "Sample_ID") %>%
left_join(., samp.data) %>%
select(1:1173, Dom_event, -Sample_ID) %>%
mutate(Dom_event=as.factor(Dom_event))
otu.tab.status <- data.frame(otu_table(ps.sv)) %>%
mutate_if(is.numeric, function(x) {x/sum(x)*100}) %>%
t() %>%
data.frame() %>%
rownames_to_column(var = "Sample_ID") %>%
left_join(., samp.data) %>%
select(1:1173, Status, -Sample_ID) %>%
mutate(Status=as.factor(Status))
load("../results/Boruta.rda")
library(glue)
library(data.table)
seq_SV <- read.delim("../../2.filtering/results/tables/otu_no_contaminants_SV_seq.txt") %>%
filter(SV%in%x) %>%
dplyr::select(X, SV) %>%
mutate(name=paste(">", SV))
seq_SV <- read.delim("../../3.filtering/results/tables/otu_no_contaminants_SV_seq_no_NC_reads.txt") %>%
filter(SV%in%x) %>%
dplyr::select(X, SV) %>%
mutate(name=paste(">", SV))
seq_SV <- read.delim("../../3.filtering/results/tables/otu_no_contaminants_SV_seq_no_NC_reads.txt")
View(seq_SV)
seq_SV <- read.csv("../../3.filtering/results/tables/otu_no_contaminants_SV_seq_no_NC_reads.txt")
View(seq_SV)
seq_SV <- read.csv("../../3.filtering/results/tables/otu_no_contaminants_SV_seq_no_NC_reads.txt") %>%
filter(SV%in%x) %>%
dplyr::select(X, SV) %>%
mutate(name=paste(">", SV))
vector <- glue("{seq_SV$name}\n{seq_SV$X}")
fwrite(list(vector), file = "../results/seq_ind_species.fasta", quote = FALSE)
taxa <- data.frame(tax_table(ps.sv)) %>%
rownames_to_column(var = "SV") %>%
filter(SV%in%x)
View(taxa)
library(mlr3)
?makeLearner
library(mlr)
?makeLearner
library(mlr3)
library(phyloseq)
library(mlbench)
library(tidyverse)
library(metagMisc)
library(Boruta)
library(mlr)
library(parallel)
library(rlist)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
ps.sv <- readRDS("../../data/Phyloseq_data/ps_sv_PVC.rds")
ps.sv
samp.data <- data.frame(sample_data(ps.sv)) %>%
mutate(Sample_ID=str_replace(Sample_ID, "-", ".")) %>%
mutate(Dom_event=paste0(.$Dom_event, "_", .$Status))
otu.tab <- data.frame(otu_table(ps.sv)) %>%
mutate_if(is.numeric, function(x) {x/sum(x)*100}) %>%
t() %>%
data.frame() %>%
rownames_to_column(var = "Sample_ID") %>%
left_join(., samp.data) %>%
select(1:1173, Dom_event, -Sample_ID) %>%
mutate(Dom_event=as.factor(Dom_event))
otu.tab.status <- data.frame(otu_table(ps.sv)) %>%
mutate_if(is.numeric, function(x) {x/sum(x)*100}) %>%
t() %>%
data.frame() %>%
rownames_to_column(var = "Sample_ID") %>%
left_join(., samp.data) %>%
select(1:1173, Status, -Sample_ID) %>%
mutate(Status=as.factor(Status))
