stop("Your data needs to be a 2d array, check dimension")
xmin <- if (is.null(cl4.object$xyCoords$lon))  min(cl4.object$xyCoords$x) else  min(cl4.object$xyCoords$lon[1,])
xmax <-  if (is.null(cl4.object$xyCoords$lon))  max(cl4.object$xyCoords$x) else  max(cl4.object$xyCoords$lon[1,])
ymin <-  if (is.null(cl4.object$xyCoords$lat))  min(cl4.object$xyCoords$y) else  min(cl4.object$xyCoords$lat[,1])
ymax <-  if (is.null(cl4.object$xyCoords$lat))  max(cl4.object$xyCoords$y) else  max(cl4.object$xyCoords$lat[,1])
rasters <- raster::raster(
cl4.object$Data,
xmn = xmin,
xmx = xmax,
ymn = ymin,
ymx = ymax
) %>%
flip(., direction = 'y')
nms <-
paste0(
str_extract(cl4.object$Dates$start[1], "\\d{4}"),
".",
str_extract(cl4.object$Dates$end[length(cl4.object$Dates$start)],  "\\d{4}")
)
names(rasters) <-  nms
raster::crs(rasters) <- sp::CRS("+init=epsg:4326")
return(rasters)
}
rst <- make_raster(lnd.1)
library(tidyverse)
rst <- make_raster(lnd.1)
lnd.1$Data
lnd.1$Data[1,1]
rst <- make_raster(lnd.1)
make_raster <- function(cl4.object) {
if (length(dim(cl4.object$Data)) != 2)
stop("Your data needs to be a 2d array, check dimension")
xmin <- if (is.null(cl4.object$xyCoords$lon))  min(cl4.object$xyCoords$x) else  min(cl4.object$xyCoords$lon[1,])
xmax <-  if (is.null(cl4.object$xyCoords$lon))  max(cl4.object$xyCoords$x) else  max(cl4.object$xyCoords$lon[1,])
ymin <-  if (is.null(cl4.object$xyCoords$lat))  min(cl4.object$xyCoords$y) else  min(cl4.object$xyCoords$lat[,1])
ymax <-  if (is.null(cl4.object$xyCoords$lat))  max(cl4.object$xyCoords$y) else  max(cl4.object$xyCoords$lat[,1])
rasters <- raster::raster(
as.factor(cl4.object$Data),
xmn = xmin,
xmx = xmax,
ymn = ymin,
ymx = ymax
) %>%
flip(., direction = 'y')
nms <-
paste0(
str_extract(cl4.object$Dates$start[1], "\\d{4}"),
".",
str_extract(cl4.object$Dates$end[length(cl4.object$Dates$start)],  "\\d{4}")
)
names(rasters) <-  nms
raster::crs(rasters) <- sp::CRS("+init=epsg:4326")
return(rasters)
}
rst <- make_raster(lnd.1)
make_raster <- function(cl4.object) {
if (length(dim(cl4.object$Data)) != 2)
stop("Your data needs to be a 2d array, check dimension")
xmin <- if (is.null(cl4.object$xyCoords$lon))  min(cl4.object$xyCoords$x) else  min(cl4.object$xyCoords$lon[1,])
xmax <-  if (is.null(cl4.object$xyCoords$lon))  max(cl4.object$xyCoords$x) else  max(cl4.object$xyCoords$lon[1,])
ymin <-  if (is.null(cl4.object$xyCoords$lat))  min(cl4.object$xyCoords$y) else  min(cl4.object$xyCoords$lat[,1])
ymax <-  if (is.null(cl4.object$xyCoords$lat))  max(cl4.object$xyCoords$y) else  max(cl4.object$xyCoords$lat[,1])
rasters <- raster::raster(
as.factor(cl4.object$Data),
xmn = xmin,
xmx = xmax,
ymn = ymin,
ymx = ymax
) %>%
flip(., direction = 'y')
return(rasters)
}
rst <- make_raster(lnd.1)
class(lnd.1$Data)
make_raster <- function(cl4.object) {
if (length(dim(cl4.object$Data)) != 2)
stop("Your data needs to be a 2d array, check dimension")
xmin <- if (is.null(cl4.object$xyCoords$lon))  min(cl4.object$xyCoords$x) else  min(cl4.object$xyCoords$lon[1,])
xmax <-  if (is.null(cl4.object$xyCoords$lon))  max(cl4.object$xyCoords$x) else  max(cl4.object$xyCoords$lon[1,])
ymin <-  if (is.null(cl4.object$xyCoords$lat))  min(cl4.object$xyCoords$y) else  min(cl4.object$xyCoords$lat[,1])
ymax <-  if (is.null(cl4.object$xyCoords$lat))  max(cl4.object$xyCoords$y) else  max(cl4.object$xyCoords$lat[,1])
rasters <- raster::raster(
structure(factor(cl4.object$Data), dim = dim(cl4.object$Data), class = c('matrix', 'factor')),
xmn = xmin,
xmx = xmax,
ymn = ymin,
ymx = ymax
) %>%
flip(., direction = 'y')
return(rasters)
}
rst <- make_raster(lnd.1)
try <- structure(factor(lnd.1$Data), dim = dim(lnd.1$Data), class = c('matrix', 'factor'))
make_raster <- function(cl4.object) {
if (length(dim(cl4.object$Data)) != 2)
stop("Your data needs to be a 2d array, check dimension")
xmin <- if (is.null(cl4.object$xyCoords$lon))  min(cl4.object$xyCoords$x) else  min(cl4.object$xyCoords$lon[1,])
xmax <-  if (is.null(cl4.object$xyCoords$lon))  max(cl4.object$xyCoords$x) else  max(cl4.object$xyCoords$lon[1,])
ymin <-  if (is.null(cl4.object$xyCoords$lat))  min(cl4.object$xyCoords$y) else  min(cl4.object$xyCoords$lat[,1])
ymax <-  if (is.null(cl4.object$xyCoords$lat))  max(cl4.object$xyCoords$y) else  max(cl4.object$xyCoords$lat[,1])
rasters <- raster::raster(
cl4.object$Data,
xmn = xmin,
xmx = xmax,
ymn = ymin,
ymx = ymax
) %>%
flip(., direction = 'y')
return(rasters)
}
lnd.1 <- loadGridData("Databases/land_cover/ESACCI-LC-L4-LCCS-Map-300m-P1Y-1992-v2.0.7cds.nc",
var = "lccs_class", lonLim = c(10,20), latLim = c(30,40))
rst <- make_raster(lnd.1)
make_raster <- function(cl4.object) {
if (length(dim(cl4.object$Data)) != 2)
stop("Your data needs to be a 2d array, check dimension")
xmin <- if (is.null(cl4.object$xyCoords$lon))  min(cl4.object$xyCoords$x) else  min(cl4.object$xyCoords$lon[1,])
xmax <-  if (is.null(cl4.object$xyCoords$lon))  max(cl4.object$xyCoords$x) else  max(cl4.object$xyCoords$lon[1,])
ymin <-  if (is.null(cl4.object$xyCoords$lat))  min(cl4.object$xyCoords$y) else  min(cl4.object$xyCoords$lat[,1])
ymax <-  if (is.null(cl4.object$xyCoords$lat))  max(cl4.object$xyCoords$y) else  max(cl4.object$xyCoords$lat[,1])
rasters <- raster::raster(
as.numeric(cl4.object$Data),
xmn = xmin,
xmx = xmax,
ymn = ymin,
ymx = ymax
) %>%
flip(., direction = 'y')
return(rasters)
}
rst <- make_raster(lnd.1)
class(lnd.1$Data)
lnd.1$Data[1,1]
lnd.1$Data[1,4]
lnd.1$Data[1,10]
lnd.1$Data[10,10]
lnd.1$Data[1:4,10]
unique(lnd.1$Data)
unique(lnd.1$Data[1:100,1:100])
dim(lnd.1$Data)
lnd.1 <- loadGridData("Databases/land_cover/ESACCI-LC-L4-LCCS-Map-300m-P1Y-1992-v2.0.7cds.nc",
var = "lccs_class", lonLim = c(10,15), latLim = c(30,40))
dim(lnd.1$Data)
lnd.1 <- loadGridData("Databases/land_cover/ESACCI-LC-L4-LCCS-Map-300m-P1Y-1992-v2.0.7cds.nc",
var = "lccs_class", lonLim = c(10,12), latLim = c(30,40))
dim(lnd.1$Data)
names(lnd.1$Data)
rownames(lnd.1$Data) <- lnd.1$xyCoords$y
lnd.1$Data
colnames(lnd.1$Data) <-  lnd.1$xyCoords$x
out <- as.data.frame(as.table(lnd.1$Data))
View(out)
lnd.1 <- loadGridData("Databases/land_cover/ESACCI-LC-L4-LCCS-Map-300m-P1Y-1992-v2.0.7cds.nc",
var = "lccs_class", lonLim = c(10,12), latLim = c(30,40))
rownames(lnd.1$Data) <- lnd.1$xyCoords$x
rownames(lnd.1$Data) <- lnd.1$xyCoords$y
colnames(lnd.1$Data) <-  lnd.1$xyCoords$x
out <- as.data.frame(as.table(lnd.1$Data))
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill =Freq),
alpha = 0.7)
out <- as.data.frame(as.table(lnd.1$Data)) %>%
group_by(Freq) %>%
mutate(class=1:n())
View(out)
out <- as.data.frame(as.table(lnd.1$Data)) %>%
group_by(Freq) %>%
mutate(class=n())
View(out)
out <- as.data.frame(as.table(lnd.1$Data)) %>%
mutate(class=as.numeric(Freq))
View(out)
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill =class),
alpha = 0.7)
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = as.factor(class)),
alpha = 0.7)
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = Freq),
alpha = 0.7)
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = Freq),
alpha = 0.7)+
scale_fill_discrete()
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = Freq),
alpha = 0.7)+
scale_fill_discrete()
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = factor(Freq)),
alpha = 0.7)+
scale_fill_discrete()
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = factor(Freq)),
alpha = 0.7)
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = factor(Freq)),
alpha = 0.7)
out <- as.data.frame(as.table(lnd.1$Data)) %>%
mutate(class=as.numeric(Freq), Freq=as.factor(Freq))
out <- as.data.frame(as.table(lnd.1$Data)) %>%
mutate(class=as.numeric(Freq))
unique(out$Freq)
as_factor(out$Freq)
class'out'
class(out)
class(out$Freq)
as.character(out$Freq)
as.factor(as.character(out$Freq))
out <- as.data.frame(as.table(lnd.1$Data)) %>%
mutate(class=as.numeric(Freq), Freq=as.factor(as.character(Freq)))
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = factor(Freq)),
alpha = 0.7)
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = factor(Freq)),
alpha = 0.7)+
theme(
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
axis.title=element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height= unit(0.5, 'cm'),
legend.key.width= unit(2, 'cm'),
legend.box.spacing = unit(0, "pt")
)
make_raster <- function(cl4.object) {
if (length(dim(cl4.object$Data)) != 2)
stop("Your data needs to be a 2d array, check dimension")
xmin <- if (is.null(cl4.object$xyCoords$lon))  min(cl4.object$xyCoords$x) else  min(cl4.object$xyCoords$lon[1,])
xmax <-  if (is.null(cl4.object$xyCoords$lon))  max(cl4.object$xyCoords$x) else  max(cl4.object$xyCoords$lon[1,])
ymin <-  if (is.null(cl4.object$xyCoords$lat))  min(cl4.object$xyCoords$y) else  min(cl4.object$xyCoords$lat[,1])
ymax <-  if (is.null(cl4.object$xyCoords$lat))  max(cl4.object$xyCoords$y) else  max(cl4.object$xyCoords$lat[,1])
rasters <- raster::raster(
as.factor(as.character(cl4.object$Data)),
xmn = xmin,
xmx = xmax,
ymn = ymin,
ymx = ymax
) %>%
flip(., direction = 'y')
return(rasters)
}
lnd.1 <- loadGridData("Databases/land_cover/ESACCI-LC-L4-LCCS-Map-300m-P1Y-1992-v2.0.7cds.nc",
var = "lccs_class", lonLim = c(10,12), latLim = c(30,40))
try <- make_raster(lnd.1)
make_raster <- function(cl4.object) {
if (length(dim(cl4.object$Data)) != 2)
stop("Your data needs to be a 2d array, check dimension")
xmin <- if (is.null(cl4.object$xyCoords$lon))  min(cl4.object$xyCoords$x) else  min(cl4.object$xyCoords$lon[1,])
xmax <-  if (is.null(cl4.object$xyCoords$lon))  max(cl4.object$xyCoords$x) else  max(cl4.object$xyCoords$lon[1,])
ymin <-  if (is.null(cl4.object$xyCoords$lat))  min(cl4.object$xyCoords$y) else  min(cl4.object$xyCoords$lat[,1])
ymax <-  if (is.null(cl4.object$xyCoords$lat))  max(cl4.object$xyCoords$y) else  max(cl4.object$xyCoords$lat[,1])
rasters <- raster::raster(
cl4.object$Data,
xmn = xmin,
xmx = xmax,
ymn = ymin,
ymx = ymax
) %>%
flip(., direction = 'y')
return(rasters)
}
try <- make_raster(lnd.1)
make_raster <- function(cl4.object) {
if (length(dim(cl4.object$Data)) != 2)
stop("Your data needs to be a 2d array, check dimension")
xmin <- if (is.null(cl4.object$xyCoords$lon))  min(cl4.object$xyCoords$x) else  min(cl4.object$xyCoords$lon[1,])
xmax <-  if (is.null(cl4.object$xyCoords$lon))  max(cl4.object$xyCoords$x) else  max(cl4.object$xyCoords$lon[1,])
ymin <-  if (is.null(cl4.object$xyCoords$lat))  min(cl4.object$xyCoords$y) else  min(cl4.object$xyCoords$lat[,1])
ymax <-  if (is.null(cl4.object$xyCoords$lat))  max(cl4.object$xyCoords$y) else  max(cl4.object$xyCoords$lat[,1])
rasters <- raster::raster(
as.factor(as.character(cl4.object$Data)),
xmn = xmin,
xmx = xmax,
ymn = ymin,
ymx = ymax
) %>%
flip(., direction = 'y')
return(rasters)
}
try <- make_raster(lnd.1)
rownames(lnd.1$Data) <- lnd.1$xyCoords$y
colnames(lnd.1$Data) <-  lnd.1$xyCoords$x
out <- as.data.frame(as.table(lnd.1$Data)) %>%
mutate(Freq=as.factor(as.character(Freq)))
unique(out$Freq)
dataInventory("Databases/land_cover/ESACCI-LC-L4-LCCS-Map-300m-P1Y-1992-v2.0.7cds.nc")
lnd.2 <- loadGridData("Databases/land_cover/C3S-LC-L4-LCCS-Map-300m-P1Y-2020-v2.1.1.nc",
var = "lccs_class", lonLim = c(10,12), latLim = c(30,40))
unique(as.vector(lnd.2$Data))
Camb <- getData("GADM", country="Cambodia", level=1)
Camb@bbox[1,1]
Camb@bbox[[1,1]]
Camb@bbox
lnd.1 <- loadGridData("Databases/land_cover/ESACCI-LC-L4-LCCS-Map-300m-P1Y-1992-v2.0.7cds.nc",
var = "lccs_class", lonLim = c( Camb@bbox[[1,1]], Camb@bbox[[1,2]]), latLim = c( Camb@bbox[[2,1]], Camb@bbox[[2,2]]))
rownames(lnd.1$Data) <- lnd.1$xyCoords$y
colnames(lnd.1$Data) <-  lnd.1$xyCoords$x
out <- as.data.frame(as.table(lnd.1$Data)) %>%
mutate(Freq=as.factor(as.character(Freq)))
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = factor(Freq)),
alpha = 0.7)+
theme(
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
axis.title=element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height= unit(0.5, 'cm'),
legend.key.width= unit(2, 'cm'),
legend.box.spacing = unit(0, "pt")
)
unique(lnd.1$Data)
unique(as.vector(lnd.1$Data))
out <- as.data.frame(as.table(lnd.1$Data)) %>%
mutate(Freq=as.factor(as.character(Freq)), class=ifelse(is.numeric(Freq), Freq, "NA"))
View(out)
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = factor(class)),
alpha = 0.7)+
theme(
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
axis.title=element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height= unit(0.5, 'cm'),
legend.key.width= unit(2, 'cm'),
legend.box.spacing = unit(0, "pt")
)
out <- as.data.frame(as.table(lnd.1$Data)) %>%
mutate(class=ifelse(is.numeric(Freq), Freq, "NA"))
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = factor(class)),
alpha = 0.7)+
theme(
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
axis.title=element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height= unit(0.5, 'cm'),
legend.key.width= unit(2, 'cm'),
legend.box.spacing = unit(0, "pt")
)
unique(out$class)
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = factor(Freq)),
alpha = 0.7)+
theme(
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
axis.title=element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height= unit(0.5, 'cm'),
legend.key.width= unit(2, 'cm'),
legend.box.spacing = unit(0, "pt")
)
out <- as.data.frame(as.table(lnd.1$Data)) %>%
mutate(Freq=as.factor(as.character(Freq)), class=ifelse(is.numeric(Freq), Freq, "NA"))
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = factor(Freq)),
alpha = 0.7)+
theme(
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
axis.title=element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height= unit(0.5, 'cm'),
legend.key.width= unit(2, 'cm'),
legend.box.spacing = unit(0, "pt")
)
lnd.1$Data
lnd.1$Data[[1:10,1:10]]
lnd.1$Data[1:10,1:10]
unique(as.vector(lnd.1$Data))
lnd.1 <- loadGridData("Databases/land_cover/ESACCI-LC-L4-LCCS-Map-300m-P1Y-1992-v2.0.7cds.nc",
var = "lccs_class", lonLim = c( Camb@bbox[[1,1]], Camb@bbox[[1,2]]), latLim = c( Camb@bbox[[2,1]], Camb@bbox[[2,2]]))
unique(as.vector(lnd.1$Data))
lnd.1$Data[1:10,1:10]
lnd.1$Data[50:60,50:60]
unique(as.vector(lnd.1$Data))
rownames(lnd.1$Data) <- lnd.1$xyCoords$y
colnames(lnd.1$Data) <-  lnd.1$xyCoords$x
out <- as.data.frame(as.table(lnd.1$Data)) %>%
mutate(Freq=as.factor(as.character(Freq)), class=ifelse(is.numeric(Freq), Freq, "NA"))
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = factor(Freq)),
alpha = 0.7)+
theme(
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
axis.title=element_blank()
)
unique(as.vector(lnd.1$Data))
length(unique(as.vector(lnd.1$Data)))
dataInventory("Databases/land_cover/ESACCI-LC-L4-LCCS-Map-300m-P1Y-1992-v2.0.7cds.nc")
length(unique(as.vector(lnd.1$Data)))
unique(as.vector(lnd.1$Data))
lnd.1 <- loadGridData("Databases/land_cover/ESACCI-LC-L4-LCCS-Map-300m-P1Y-1992-v2.0.7cds.nc",
var = "change_count", lonLim = c( Camb@bbox[[1,1]], Camb@bbox[[1,2]]), latLim = c( Camb@bbox[[2,1]], Camb@bbox[[2,2]]))
unique(as.vector(lnd.1$Data))
rownames(lnd.1$Data) <- lnd.1$xyCoords$y
colnames(lnd.1$Data) <-  lnd.1$xyCoords$x
out <- as.data.frame(as.table(lnd.1$Data)) %>%
mutate(Freq=as.factor(as.character(Freq)), class=ifelse(is.numeric(Freq), Freq, "NA"))
out <- as.data.frame(as.table(lnd.1$Data)) %>%
mutate(Freq=as.factor(as.character(Freq)))
ggplot(out)+
geom_raster(aes(x = Var1, y = Var2, fill = factor(Freq)),
alpha = 0.7)+
theme(
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
axis.title=element_blank()
)
unique(as.vector(lnd.1$Data))
lnd.1 <- loadGridData("Databases/land_cover/ESACCI-LC-L4-LCCS-Map-300m-P1Y-1992-v2.0.7cds.nc",
var = "lcc_level", lonLim = c( Camb@bbox[[1,1]], Camb@bbox[[1,2]]), latLim = c( Camb@bbox[[2,1]], Camb@bbox[[2,2]]))
dataInventory("Databases/land_cover/ESACCI-LC-L4-LCCS-Map-300m-P1Y-1992-v2.0.7cds.nc")
dataInventory("Databases/land_cover/ESACCI-LC-L4-LCCS-Map-300m-P1Y-1992-v2.0.7cds.nc")$try
lnd.1 <- loadGridData("Databases/land_cover/ESACCI-LC-L4-LCCS-Map-300m-P1Y-1992-v2.0.7cds.nc",
var = "lccs_class", lonLim = c( Camb@bbox[[1,1]], Camb@bbox[[1,2]]), latLim = c( Camb@bbox[[2,1]], Camb@bbox[[2,2]]))
unique(as.vector(lnd.1$Data))
lnd.1 <- loadGridData("Downloads/dataset-satellite-land-cover-3b78f8aa-b42d-4a00-a1ba-59234410b147/C3S-LC-L4-LCCS-Map-300m-P1Y-2020-v2.1.1.nc",
var = "lccs_class", lonLim = c( Camb@bbox[[1,1]], Camb@bbox[[1,2]]), latLim = c( Camb@bbox[[2,1]], Camb@bbox[[2,2]]))
unique(as.vector(lnd.1$Data))
library(mlr3)
library(phyloseq)
library(mlbench)
library(tidyverse)
library(metagMisc)
library(Boruta)
library(parallel)
library(rlist)
library(mlr3)
library(phyloseq)
library(mlbench)
library(tidyverse)
library(metagMisc)
library(Boruta)
library(parallel)
library(rlist)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
ps.sv <- readRDS("../../data/Phyloseq_data/ps_sv_PVC.rds")
samp.data <- data.frame(sample_data(ps.sv)) %>%
mutate(Sample_ID=str_replace(Sample_ID, "-", ".")) %>%
mutate(Dom_event=paste0(.$Dom_event, "_", .$Status))
otu.tab <- data.frame(otu_table(ps.sv)) %>%
mutate_if(is.numeric, function(x) {x/sum(x)*100}) %>%
t() %>%
data.frame() %>%
rownames_to_column(var = "Sample_ID") %>%
left_join(., samp.data) %>%
select(1:1173, Dom_event, -Sample_ID) %>%
mutate(Dom_event=as.factor(Dom_event))
otu.tab.status <- data.frame(otu_table(ps.sv)) %>%
mutate_if(is.numeric, function(x) {x/sum(x)*100}) %>%
t() %>%
data.frame() %>%
rownames_to_column(var = "Sample_ID") %>%
left_join(., samp.data) %>%
select(1:1173, Status, -Sample_ID) %>%
mutate(Status=as.factor(Status))
boruta.out.status <- Boruta(Status~., otu.tab.status)
