filter(Process!="Stochasticity") %>%
ggplot(aes(Group, y=Mean, fill=Process)) +
geom_bar(stat = "identity", color="black")+
ylab("Relative importance (%)")+
theme_Publication(base_family = 12)+
theme(axis.text.x=element_text(angle=45,hjust=1))
ggsave("../results/global_process.svg", width = 5, height = 8, units = "cm")
# version 2020.9.21, add classification information
# version 2021.1.7, add (step 15) icamp.cate to summarize for different categories of taxa, e.g. core versus rare taxa.
library(phyloseq)
library(tidyverse)
library(iCAMP)
library(ape)
library(metagMisc)
library(readxl)
source("~/theme_publication.R")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
load("../outputs/CIAT.iCAMP.Summary.rda")
icbin$Bin.TopClass %>%
arrange(desc(BinRA)) %>%
filter(BinRA>0.02) %>%
ggplot() +
geom_bar(aes(fill=Bin, x="Bin", y=BinRA), color="black",position="stack",stat="identity")+
theme_Publication(base_family = 12)
# first plot look at the overall importance of ecological processes
load("../outputs/CIAT.iCAMP.Boot.Status.rda")
icboot$summary[,1:5] %>%
filter(Group%in%c("Wild","Domesticated")) %>%
mutate(Mean=as.numeric(Mean)) %>%
filter(Process!="Stochasticity") %>%
ggplot(aes(Group, y=Mean, fill=Process)) +
geom_bar(stat = "identity", color="black")+
ylab("Relative importance (%)")+
theme_Publication(base_family = 12)+
theme(axis.text.x=element_text(angle=45,hjust=1))
ggsave("../results/global_process.svg", width = 5, height = 8, units = "cm")
icbin$Bin.TopClass %>%
arrange(desc(BinRA))
load("../outputs/CIAT.iCAMP.Summary.rda")
icbin$Bin.TopClass %>%
arrange(desc(BinRA)) %>%
filter(BinRA>0.02) %>%
ggplot() +
geom_bar(aes(fill=Bin, x="Bin", y=BinRA), color="black",position="stack",stat="identity")+
theme_Publication(base_family = 12)
sum(sort(icbin$Bin.TopClass$BinRA, decreasing = TRUE)[1:10]) # first 10 bins account for 60% of abundances. First bin 18%.
sum(sort(icbin$Bin.TopClass$BinRA, decreasing = TRUE)[1:5]) # first 10 bins account for 60% of abundances. First bin 18%.
icbin$Bin.TopClass %>%
filter(Bin%in%c("Bin20","Bin18","Bin16","Bin25","Bin7")) %>%
ggplot() +
geom_bar(aes(fill=Genus.maxNamed, x=Bin, y=Genus.maxNamed.Percent), color="black",position="stack",stat="identity")+
theme_Publication(base_family = 12)+
ylab("Relative abundance within Bin")
icbin$Ptk %>%
select(1:4,bin20, bin18, bin16, bin25,bin7) %>%
filter(Index%in%c("HeS","HoS","DL","HD","DR")) %>%
filter(Group%in%c("Wild","Domesticated")) %>%
gather(key="bins", value, 5:14) %>%
mutate(value=as.numeric(value)) %>%
ggplot(aes(bins, value, fill=Index))+
geom_bar(stat="identity", color="black")+
facet_grid(~Group)+
theme_Publication(base_size = 12)+
theme(axis.text.x=element_text(angle=45,hjust=1))
icbin$Ptk %>%
select(1:4,bin20, bin18, bin16, bin25,bin7) %>%
filter(Index%in%c("HeS","HoS","DL","HD","DR")) %>%
filter(Group%in%c("Wild","Domesticated")) %>%
gather(key="bins", value, 5:9) %>%
mutate(value=as.numeric(value)) %>%
ggplot(aes(bins, value, fill=Index))+
geom_bar(stat="identity", color="black")+
facet_grid(~Group)+
theme_Publication(base_size = 12)+
theme(axis.text.x=element_text(angle=45,hjust=1))
ggsave("../results/bin_process.svg", width = 6, height = 7, units = "cm")
icbin$Ptk %>%
select(1:4,bin20, bin18, bin16, bin25,bin7) %>%
filter(Index%in%c("HeS","HoS","DL","HD","DR")) %>%
filter(Group%in%c("Wild","Domesticated")) %>%
gather(key="bins", value, 5:9) %>%
mutate(value=as.numeric(value)) %>%
ggplot(aes(bins, value, fill=Index))+
geom_bar(stat="identity", color="black")+
facet_grid(~Group)+
theme_Publication(base_size = 12)+
theme(axis.text.x=element_text(angle=45,hjust=1))+
coord_flip()
ggsave("../results/bin_process.svg", width = 6, height = 7, units = "cm")
library(vegan)
library(phyloseq)
library(metagMisc)
library(tidyverse)
library(readxl)
source("tools.r")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
ps.sv <- readRDS("../../3.filtering/results/tables/ps.rds")
# Removing SVs that are present at 1% and have total count lower than 20
ps.sv <- phyloseq_filter_prevalence(ps.sv, prev.trh = 0.01, abund.trh = 20, threshold_condition = "OR", abund.type = "total")
# inclusind collection time
collection_time <- read_excel("../../../../../../../Accessions to choose/datasets/Stations_collection_year.xlsx") %>%
select(ACCESION, 'COLLECTED YEAR') %>%
rename(Sample_ID=ACCESION, C.year='COLLECTED YEAR') %>%
mutate(Sample_ID=str_squish(Sample_ID)) %>%
mutate(Sample_ID=str_remove(Sample_ID, " "), C.year=as.numeric(C.year)) %>%
mutate(C.year.d=C.year-2019) %>%
mutate(C.year.d=C.year.d*-1)
samp.data <- data.frame(sample_data(ps.sv))
samp.data <- left_join(samp.data, collection_time) %>%
select(Sample_ID,C.year,Ca,Altitude,Latitude, Longitude, Flowering_time, 12:23)
rownames(samp.data) <- samp.data$Sample_ID
samp.data <- samp.data[,-1, drop=FALSE]
icres <- readRDS("../outputs/ICAMP.detail.rda")
icres <- icres[[1]]
time=(samp.data[match(icres$sample1,rownames(samp.data)),]+
samp.data[match(icres$sample2,rownames(samp.data)),])/2
denv=abs(samp.data[match(icres$sample1,rownames(samp.data)),]-
samp.data[match(icres$sample2,rownames(samp.data)),])
mdenv=cbind(icres[,1:2],denv)
out <- readRDS("../results/out_Mantel_lunat.rds")
out.df <- data.frame(Vb=colnames(mdenv)[4:19]) %>%
add_column(HeS=NA, HoS=NA, DL=NA, DH=NA, DR=NA)
out.df[5,2] <- 0.11
out.df[16,2] <- 0.1
out.df[16,3] <- -0.11
out.df[11,3] <- 0.11
out.df[5,3] <- -0.12
out.df[6,3] <- -0.09
out.df[4,4] <- -0.10
out.df[5,4] <- 0.14
out.df[5,5] <- 0.14
View(out.df)
View(mdenv)
View(samp.data)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
ps.sv <- readRDS("../../3.filtering/results/tables/ps.rds")
# Removing SVs that are present at 1% and have total count lower than 20
ps.sv <- phyloseq_filter_prevalence(ps.sv, prev.trh = 0.01, abund.trh = 20, threshold_condition = "OR", abund.type = "total")
samp.data <- data.frame(sample_data(ps.sv))
View(samp.data)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
ps.sv <- readRDS("../../3.filtering/results/tables/ps.rds")
# Removing SVs that are present at 1% and have total count lower than 20
ps.sv <- phyloseq_filter_prevalence(ps.sv, prev.trh = 0.01, abund.trh = 20, threshold_condition = "OR", abund.type = "total")
# inclusind collection time
collection_time <- read_excel("../../../../../../../Accessions to choose/datasets/Stations_collection_year.xlsx") %>%
select(ACCESION, 'COLLECTED YEAR') %>%
rename(Sample_ID=ACCESION, C.year='COLLECTED YEAR') %>%
mutate(Sample_ID=str_squish(Sample_ID)) %>%
mutate(Sample_ID=str_remove(Sample_ID, " "), C.year=as.numeric(C.year)) %>%
mutate(C.year.d=C.year-2019) %>%
mutate(C.year.d=C.year.d*-1)
samp.data <- data.frame(sample_data(ps.sv))
samp.data <- left_join(samp.data, collection_time) %>%
select(Sample_ID,C.year,Ca,Altitude,Latitude, Longitude, Weight, Flowering_time, 12:23)
rownames(samp.data) <- samp.data$Sample_ID
samp.data <- samp.data[,-1, drop=FALSE]
View(samp.data)
icres <- readRDS("../outputs/ICAMP.detail.rda")
icres <- icres[[1]]
time=(samp.data[match(icres$sample1,rownames(samp.data)),]+
samp.data[match(icres$sample2,rownames(samp.data)),])/2
denv=abs(samp.data[match(icres$sample1,rownames(samp.data)),]-
samp.data[match(icres$sample2,rownames(samp.data)),])
mdenv=cbind(icres[,1:2],denv)
View(mdenv)
out <- map(3:7, function(i) {
df <- icres %>%
select(1,2,i) # HoS
map(colnames(mdenv)[4:19], function(x) {
mdenv2 <- mdenv %>%
select(1:2, x)
mci=mcMantel(y.3col = df,y.ids = NULL,
x.3col = mdenv2, grp.rand = NULL,
grp.const = NULL,try.time = 5, na.rm = TRUE,
method = "spearman",permutations = 999)
c(mci$statistic, mci$signif)
})})
names(out) <- colnames(icres)[3:7]
for (i in 1:length(out)) {
names(out[[i]]) <- colnames(mdenv[4:19])
}
out
saveRDS(out, "../results/out_Mantel_lunat.rds")
out <- readRDS("../results/out_Mantel_lunat.rds")
out.df <- data.frame(Vb=colnames(mdenv)[4:19]) %>%
add_column(HeS=NA, HoS=NA, DL=NA, DH=NA, DR=NA)
View(out.df)
library(vegan)
library(phyloseq)
library(metagMisc)
library(tidyverse)
library(readxl)
source("tools.r")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
ps.sv <- readRDS("../../3.filtering/results/tables/ps.rds")
# Removing SVs that are present at 1% and have total count lower than 20
ps.sv <- phyloseq_filter_prevalence(ps.sv, prev.trh = 0.01, abund.trh = 20, threshold_condition = "OR", abund.type = "total")
# inclusind collection time
collection_time <- read_excel("../../../../../../../Accessions to choose/datasets/Stations_collection_year.xlsx") %>%
select(ACCESION, 'COLLECTED YEAR') %>%
rename(Sample_ID=ACCESION, C.year='COLLECTED YEAR') %>%
mutate(Sample_ID=str_squish(Sample_ID)) %>%
mutate(Sample_ID=str_remove(Sample_ID, " "), C.year=as.numeric(C.year)) %>%
mutate(C.year.d=C.year-2019) %>%
mutate(C.year.d=C.year.d*-1)
samp.data <- data.frame(sample_data(ps.sv))
samp.data <- left_join(samp.data, collection_time) %>%
select(Sample_ID,C.year,Ca,Altitude,Latitude, Longitude, Weight, Flowering_time, 12:23)
rownames(samp.data) <- samp.data$Sample_ID
samp.data <- samp.data[,-1, drop=FALSE]
icres <- readRDS("../outputs/ICAMP.detail.rda")
icres <- icres[[1]]
time=(samp.data[match(icres$sample1,rownames(samp.data)),]+
samp.data[match(icres$sample2,rownames(samp.data)),])/2
denv=abs(samp.data[match(icres$sample1,rownames(samp.data)),]-
samp.data[match(icres$sample2,rownames(samp.data)),])
mdenv=cbind(icres[,1:2],denv)
out <- readRDS("../results/out_Mantel_lunat.rds")
out
library(vegan)
library(phyloseq)
library(metagMisc)
library(tidyverse)
library(readxl)
source("tools.r")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
ps.sv <- readRDS("../../3.filtering/results/tables/ps.rds")
# Removing SVs that are present at 1% and have total count lower than 20
ps.sv <- phyloseq_filter_prevalence(ps.sv, prev.trh = 0.01, abund.trh = 20, threshold_condition = "OR", abund.type = "total")
# inclusind collection time
collection_time <- read_excel("../../../../../../../Accessions to choose/datasets/Stations_collection_year.xlsx") %>%
select(ACCESION, 'COLLECTED YEAR') %>%
rename(Sample_ID=ACCESION, C.year='COLLECTED YEAR') %>%
mutate(Sample_ID=str_squish(Sample_ID)) %>%
mutate(Sample_ID=str_remove(Sample_ID, " "), C.year=as.numeric(C.year)) %>%
mutate(C.year.d=C.year-2019) %>%
mutate(C.year.d=C.year.d*-1)
samp.data <- data.frame(sample_data(ps.sv))
samp.data <- left_join(samp.data, collection_time) %>%
select(Sample_ID,C.year,Ca,Altitude,Latitude, Longitude, Weight, Flowering_time, 12:23)
rownames(samp.data) <- samp.data$Sample_ID
samp.data <- samp.data[,-1, drop=FALSE]
icres <- readRDS("../outputs/ICAMP.detail.rda")
icres <- icres[[1]]
time=(samp.data[match(icres$sample1,rownames(samp.data)),]+
samp.data[match(icres$sample2,rownames(samp.data)),])/2
denv=abs(samp.data[match(icres$sample1,rownames(samp.data)),]-
samp.data[match(icres$sample2,rownames(samp.data)),])
mdenv=cbind(icres[,1:2],denv)
out <- readRDS("../results/out_Mantel_lunat.rds")
out
library(phyloseq)
library(tidyverse)
library(iCAMP)
library(ape)
library(metagMisc)
library(readxl)
library(lemon)
source("~/theme_publication.R")
load("../outputs/CIAT.iCAMP.Summary.rda")
icbin$Bin.TopClass %>%
arrange(desc(BinRA)) %>%
filter(BinRA>0.02) %>%
ggplot() +
geom_bar(aes(fill=Bin, x="Bin", y=BinRA), color="black",position="stack",stat="identity")+
theme_Publication(base_family = 12)
icbin$Bin.TopClass %>%
filter(Bin%in%c("Bin20","Bin18","Bin16","Bin25","Bin7")) %>%
ggplot() +
geom_bar(aes(fill=Genus.maxNamed, x=Bin, y=Genus.maxNamed.Percent), color="black",position="stack",stat="identity")+
theme_Publication(base_family = 12)+
ylab("Relative abundance within Bin")
icbin$Ptk %>%
select(1:4,bin20, bin18, bin16, bin25,bin7) %>%
filter(Index%in%c("HeS","HoS","DL","HD","DR")) %>%
filter(Group%in%c("Wild","Domesticated")) %>%
gather(key="bins", value, 5:9) %>%
mutate(value=as.numeric(value)) %>%
ggplot(aes(bins, value, fill=Index))+
geom_bar(stat="identity", color="black")+
facet_rep_wrap(~Group, nrow=2, repeat.tick.labels = "all")+
theme_Publication(base_size = 12)+
theme(axis.text.x=element_text(angle=45,hjust=1))+
coord_flip()
icbin$Bin.TopClass %>%
filter(Bin%in%c("Bin20","Bin18","Bin16","Bin25","Bin7")) %>%
ggplot() +
geom_bar(aes(fill=Family.maxNamed, x=Bin, y=Family.maxNamed.Percent), color="black",position="stack",stat="identity")+
theme_Publication(base_family = 12)+
ylab("Relative abundance within Bin")
sum(sort(icbin$Bin.TopClass$BinRA, decreasing = TRUE)[1:5]) # first 5 bins account for 33% of abundances. First bin 18%.
icbin$Bin.TopClass %>%
arrange(desc(BinRA)) %>%
filter(BinRA>0.02) %>%
ggplot() +
geom_bar(aes(fill=Bin, x="Bin", y=BinRA), color="black",position="stack",stat="identity")+
theme_Publication(base_family = 12)
sum(sort(icbin$Bin.TopClass$BinRA, decreasing = TRUE)[1:5]) # first 5 bins account for 33% of abundances. First bin 18%.
sum(sort(icbin$Bin.TopClass$BinRA, decreasing = TRUE)[1:8]) # first 5 bins account for 33% of abundances. First bin 18%.
sum(sort(icbin$Bin.TopClass$BinRA, decreasing = TRUE)[1:10]) # first 5 bins account for 33% of abundances. First bin 18%.
icbin$Bin.TopClass %>%
ggplot() +
geom_bar(aes(fill=Family.maxNamed, x=Bin, y=Family.maxNamed.Percent), color="black",position="stack",stat="identity")+
theme_Publication(base_family = 12)+
ylab("Relative abundance within Bin")
icbin$Bin.TopClass %>%
filter(Bin%in%c("Bin20","Bin18","Bin16","Bin25","Bin7")) %>%
ggplot() +
geom_bar(aes(fill=Family.maxNamed, x=Bin, y=Family.maxNamed.Percent), color="black",position="stack",stat="identity")+
theme_Publication(base_family = 12)+
ylab("Relative abundance within Bin")
ggsave("../results/bin_identity.svg", width = 5, height = 10, units = "cm")
icbin$Ptk %>%
select(1:4,bin20, bin18, bin16, bin25,bin7) %>%
filter(Index%in%c("HeS","HoS","DL","HD","DR")) %>%
filter(Group%in%c("Wild","Domesticated")) %>%
gather(key="bins", value, 5:9) %>%
mutate(value=as.numeric(value)) %>%
ggplot(aes(bins, value, fill=Index))+
geom_bar(stat="identity", color="black")+
facet_rep_wrap(~Group, nrow=2, repeat.tick.labels = "all")+
theme_Publication(base_size = 12)+
theme(axis.text.x=element_text(angle=45,hjust=1))+
coord_flip()
icbin$Bin.TopClass %>%
filter(Bin%in%c("Bin20","Bin18","Bin16","Bin25","Bin7")) %>%
ggplot() +
geom_bar(aes(fill=Family.maxNamed, x=Bin, y=Family.maxNamed.Percent), color="black",position="stack",stat="identity")+
theme_Publication(base_family = 12)+
ylab("Relative abundance within Bin")
icbin$Bin.TopClass %>%
filter(Bin%in%c("Bin20","Bin18","Bin16","Bin25","Bin7")) %>%
ggplot() +
geom_bar(aes(fill=Family.maxNamed, x=Bin, y=Family.maxNamed.Percent), color="black",position="stack",stat="identity")+
theme_Publication(base_family = 12)+
ylab("Relative abundance within Bin")+
coord_flip()
ggsave("../results/bin_identity.svg", width = 5, height = 10, units = "cm")
ggsave("../results/bin_identity.svg", width = 5, height = 7, units = "cm")
groups=c("Domesticated", "Wild")
bins.HoS <- icbin$Ptk %>%
filter(Group%in%groups, Index=="DominantProcess") %>%
gather(key="bins", value ="Dom_process", 5:39) %>%
filter(Dom_process=="HoS") %>%
mutate(bins=str_replace(bins, "b", "B"))
icbin$Bin.TopClass %>%
filter(Bin%in%bins.HoS$bins) %>%
ggplot() +
geom_bar(aes(fill=Genus.maxNamed, x=Bin, y=Genus.maxNamed.Percent), color="black",position="stack",stat="identity")+
theme_Publication(base_family = 12)+
ylab("Relative abundance within Bin")
library(phyloseq)
library(tidyverse)
library(iCAMP)
library(ape)
library(metagMisc)
library(readxl)
library(lemon)
source("~/theme_publication.R")
t0=Sys.time() # to calculate time cost
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
load("../outputs/CIAT.iCAMP.Summary.rda")
library(data.table)
colnames(icbin$Bin.TopClass)
vec <- paste0("> ", icbin$Bin.TopClass$Bin, "_PVC")
vec2 <- paste(vec, icbin$Bin.TopClass$TopTaxonID, sep="\n")
fwrite(list(vec2), file = "../outputs/PVC_seq.fasta", quote = FALSE)
vec <- paste0("> ", icbin$Bin.TopClass$Bin, "_PLC")
vec2 <- paste(vec, icbin$Bin.TopClass$TopTaxonID, sep="\n")
fwrite(list(vec2), file = "../outputs/PLC_seq.fasta", quote = FALSE)
rm(list=ls())
library(phyloseq)
library(tidyverse)
library(iCAMP)
library(ape)
library(metagMisc)
library(readxl)
library(lemon)
source("~/theme_publication.R")
t0=Sys.time() # to calculate time cost
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
load("../outputs/CIAT.iCAMP.Summary.rda")
library(data.table)
colnames(icbin$Bin.TopClass)
vec <- paste0("> ", icbin$Bin.TopClass$Bin, "_PVC")
vec2 <- paste(vec, icbin$Bin.TopClass$TopTaxonID, sep="\n")
fwrite(list(vec2), file = "../outputs/PVC_seq.fasta", quote = FALSE)
library(phyloseq)
library(tidyverse)
library(iCAMP)
library(ape)
library(metagMisc)
library(readxl)
library(lemon)
t0=Sys.time() # to calculate time cost
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
ps <- readRDS("../../data/Phyloseq_data/ps_seq_PVC.rds")
# to be discarded an otu has to be present in less than 1% of samples and have a total count of less than the specify threshold
ps <- phyloseq_filter_prevalence(ps, prev.trh = 0.01, abund.trh = 20, threshold_condition = "OR", abund.type = "total")
# the OTU table file (Tab delimited txt file)
comm <- t(data.frame(otu_table(ps)))
# the phylogenetic tree file
tree=phy_tree(ps)
# the classification (taxonomy) information
clas=data.frame(tax_table(ps))
# sample data
# inclusind collection time
collection_time <- read_excel("../../../../../../../Accessions to choose/datasets/Stations_collection_year.xlsx") %>%
select(ACCESION, 'COLLECTED YEAR') %>%
rename(Sample_ID=ACCESION, C.year='COLLECTED YEAR') %>%
mutate(Sample_ID=str_squish(Sample_ID)) %>%
mutate(Sample_ID=str_remove(Sample_ID, " "), C.year=as.numeric(C.year)) %>%
mutate(C.year.d=C.year-2019) %>%
mutate(C.year.d=C.year.d*-1)
View(collection_time)
samp.data <- data.frame(sample_data(ps))
# the environmental varialbes
env=data.frame(sample_data(ps)) %>%
left_join(collection_time) %>%
select(13:25) %>%
select(Ca, everything())
View(env)
env=data.frame(sample_data(ps)) %>%
left_join(collection_time)
View(env)
data.frame(sample_data(ps))
env2=sample_data(ps) %>%
left_join(collection_time)
env2=data.frame(sample_data(ps)) %>%
left_join(collection_time)
ps <- readRDS("../../data/Phyloseq_data/ps_seq_PVC.rds")
ps@sam_data <- sample_data(env2)
ps <- readRDS("../../data/Phyloseq_data/ps_seq_PVC.rds")
ps <- readRDS("../../data/Phyloseq_data/ps_seq_PVC.rds")
# sample data
# inclusind collection time
collection_time <- read_excel("../../../../../../../Accessions to choose/datasets/Stations_collection_year.xlsx") %>%
select(ACCESION, 'COLLECTED YEAR') %>%
rename(Sample_ID=ACCESION, C.year='COLLECTED YEAR') %>%
mutate(Sample_ID=str_squish(Sample_ID)) %>%
mutate(Sample_ID=str_remove(Sample_ID, " "), C.year=as.numeric(C.year)) %>%
mutate(C.year.d=C.year-2019) %>%
mutate(C.year.d=C.year.d*-1)
env=data.frame(sample_data(ps)) %>%
left_join(collection_time)
ps@sam_data <- sample_data(env)
saveRDS(ps, file="../../data/Phyloseq_data/ps_seq_PVC.rds")
rm(list=ls())
ps <- readRDS("../../data/Phyloseq_data/ps_seq_PVC.rds")
# to be discarded an otu has to be present in less than 1% of samples and have a total count of less than the specify threshold
ps <- phyloseq_filter_prevalence(ps, prev.trh = 0.01, abund.trh = 20, threshold_condition = "OR", abund.type = "total")
colnames(sample_data(ps))
# the environmental varialbes
env=data.frame(sample_data(ps)) %>%
select(13:25) %>%
select(Ca, everything())
View(env)
rownames(env) <- rownames(comm)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
ps <- readRDS("../../data/Phyloseq_data/ps_seq_PVC.rds")
# to be discarded an otu has to be present in less than 1% of samples and have a total count of less than the specify threshold
ps <- phyloseq_filter_prevalence(ps, prev.trh = 0.01, abund.trh = 20, threshold_condition = "OR", abund.type = "total")
colnames(sample_data(ps))
# the OTU table file (Tab delimited txt file)
comm <- t(data.frame(otu_table(ps)))
# the phylogenetic tree file
tree=phy_tree(ps)
# the classification (taxonomy) information
clas=data.frame(tax_table(ps))
# the treatment informaiton table
treat= data.frame(sample_data(ps)) %>%
select(Status)
rownames(treat) <- rownames(comm)
unique(treat$Status)
# the environmental varialbes
env=data.frame(sample_data(ps)) %>%
select(13:25) %>%
select(Ca, everything())
rownames(env) <- rownames(comm)
# 2 # key parameter setting
prefix="CIAT"  # prefix of the output file names. usually use a project ID.
rand.time=1000  # randomization time, 1000 is usually enough. For example test, you may set as 100 or less to save time.
nworker=7 # nworker is thread number for parallel computing, which depends on the CPU core number of your computer.
memory.G=50 # to set the memory size as you need (but should be less than the available space in your hard disk), so that calculation of large tree will not be limited by physical memory. unit is Gb.
# 4 # match sample IDs in OTU table and treatment information table
sampid.check=match.name(rn.list=list(comm=comm,treat=treat,env=env))
# 5 # match OTU IDs in OTU table and tree file
spid.check=match.name(cn.list=list(comm=comm),rn.list=list(clas=clas),tree.list=list(tree=tree))
library(phyloseq)
library(tidyverse)
library(iCAMP)
library(ape)
library(metagMisc)
library(readxl)
library(lemon)
t0=Sys.time() # to calculate time cost
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
ps <- readRDS("../../data/Phyloseq_data/ps_seq_PVC.rds")
# to be discarded an otu has to be present in less than 1% of samples and have a total count of less than the specify threshold
ps <- phyloseq_filter_prevalence(ps, prev.trh = 0.01, abund.trh = 20, threshold_condition = "OR", abund.type = "total")
