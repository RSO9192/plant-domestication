ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
theme_Publication(base_size = 11)+
ylab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(ylim = c(10000, 80000)) +
ggsave("../plots/AIC.svg", width = 7, height = 7, units = "cm")
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
theme_Publication(base_size = 11)+
ylab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
theme_Publication(base_size = 11)+
ylab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(10000, 80000)) +
ggsave("../plots/AIC.svg", width = 7, height = 7, units = "cm")
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
theme_Publication(base_size = 11)+
ylab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(40000, 80000)) +
ggsave("../plots/AIC.svg", width = 7, height = 7, units = "cm")
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
theme_Publication(base_size = 11)+
ylab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(70000, 80000)) +
ggsave("../plots/AIC.svg", width = 7, height = 7, units = "cm")
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
theme_Publication(base_size = 11)+
ylab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(70000, 80000)) +
ggsave("../plots/AIC.svg", width = 7, height = 7, units = "cm")
aic <- data.frame(aic=devs, var=names(devs))
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
theme_Publication(base_size = 11)+
ylab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(70000, 80000)) +
ggsave("../plots/AIC.svg", width = 7, height = 7, units = "cm")
View(samp.data3)
samp.data3 <- samp.data %>%
dplyr::select(Subpopulation, Status, Dom_event, -Weight,  12:24)
View(samp.data3)
# for data for which we do not have missing data
samp.data3 <- samp.data %>%
dplyr::select(Subpopulation, Status, Dom_event,   12:24, -Weight,)
View(samp.data3)
devs = rep(NA,ncol(samp.data3))
names(devs) = colnames(samp.data3)
for (iVar in 1:ncol(samp.data3)) {
spid_glmi = manyglm(otu.MV~samp.data3[,iVar],offset = QDoffset,data = samp.data3)
devs[iVar] = spid_glmi$AICsum
}
aic <- data.frame(aic=devs, var=names(devs))
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
theme_Publication(base_size = 11)+
ylab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(70000, 80000)) +
ggsave("../plots/AIC.svg", width = 7, height = 7, units = "cm")
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
theme_Publication(base_size = 11)+
ylab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(70000, 80000)) +
ggsave("../plots/AIC.svg", width = 7, height = 7, units = "cm")
library(mvabund)
library(lattice)
library(gllvm)
library(corrplot)
library(phyloseq)
library(tidyverse)
library(metagMisc)
library(metacoder)
library(parallel)
library(readxl)
library(metacoder)
library(spaa)
library(gllvm)
source("~/theme_publication.R")
getwd()
# loading the phyloseq object filtered to remove SVs not present
ps.sv <- readRDS("../../3.filtering/results/tables/ps_sv_filt.rds")
# Removing SVs that are present at 1% and have total count lower than 20
ps.sv <- phyloseq_filter_prevalence(ps.sv, prev.trh = 0.01, abund.trh = 20, threshold_condition = "OR", abund.type = "total")
sampledata2 <- data.frame(sample_data(ps.sv)) %>%
unite("Dom_event", Dom_event, Status, remove = FALSE)
ps.sv@sam_data <- sample_data(sampledata2)
ord <- ordinate(ps.sv, "MDS", "bray")
plot_ordination(ps.sv,ord, type="samples")+
geom_point(aes(color=Dom_event), size=4, alpha=0.5)+
theme_Publication()
sampledata2 %>%
mutate(Dom_event= case_when(Dom_event=="Ande_Wild" ~ "AW",
Dom_event=="Ande_Domesticated" ~ "AD",
Dom_event=="Mesoamerica_Domesticated" ~ "MD",
Dom_event=="Mesoamerica_Wild" ~ "MW")) %>%
ggplot(aes(Dom_event,Ca*10000))+
geom_boxplot(coef=6)+
geom_jitter(size=1, alpha=0.6)+
theme_Publication(base_size = 10)+
ylab("Ca (mg/Kg)")
# samples needs to be in rows
otu.table <- t(as.data.frame(otu_table(ps.sv)))
# calculating niche width
B.value <- as.data.frame(t(niche.width(otu.table, method = "shannon"))) %>%
rownames_to_column(var="SV") %>%
rename(B.value=V1)
B.value.0 <-B.value %>%
filter(B.value==0)
nrow(B.value.0)/(nrow(B.value))*100  # 74% of SVs are specialists
# reading in sample data
samp.data <- data.frame(sample_data(ps.sv))
# inclusind collection time
collection_time <- read_excel("../../../../../../../Accessions to choose/datasets/Stations_collection_year.xlsx") %>%
select(ACCESION, 'COLLECTED YEAR') %>%
rename(Sample_ID=ACCESION, C.year='COLLECTED YEAR') %>%
mutate(Sample_ID=str_squish(Sample_ID)) %>%
mutate(Sample_ID=str_remove(Sample_ID, " "), C.year=as.numeric(C.year)) %>%
mutate(C.year.d=C.year-2019) %>%
mutate(C.year.d=C.year.d*-1)
samp.data <- left_join(samp.data, collection_time)
# making otu table as mv abund object
otu.MV <- mvabund(otu.table)
#fitting the null model
ft_reveg0=manyglm(otu.MV ~1, data=samp.data)
# offset as difference between total counts peer sample and the NULL model
QDoffset = log(rowSums(otu.MV)) - log(rowSums(predict.manyglm(ft_reveg0)))
# #best explanatory variables
microb_1 <- manyglm(otu.MV~1,data = samp.data) # intercept only model for all samples
# for data for which we do not have missing data
samp.data3 <- samp.data %>%
dplyr::select(Subpopulation, Status, Dom_event,   12:24, -Weight,)
devs = rep(NA,ncol(samp.data3))
names(devs) = colnames(samp.data3)
for (iVar in 1:ncol(samp.data3)) {
spid_glmi = manyglm(otu.MV~samp.data3[,iVar],offset = QDoffset,data = samp.data3)
devs[iVar] = spid_glmi$AICsum
}
aic <- data.frame(aic=devs, var=names(devs))
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
theme_Publication(base_size = 11)+
ylab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(70000, 80000)) +
ggsave("../plots/AIC.svg", width = 8, height = 10, units = "cm")
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
theme_Publication(base_size = 11)+
ylab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(70000, 80000)) +
ggsave("../plots/AIC.svg", width = 8, height = 10, units = "cm")
library(mvabund)
library(lattice)
library(gllvm)
library(corrplot)
library(phyloseq)
library(tidyverse)
library(metagMisc)
library(metacoder)
library(parallel)
library(readxl)
library(metacoder)
library(spaa)
library(gllvm)
getwd()
ps.sv <- readRDS("../../Phyloseq_data/ps_sv_PVC.rds")
# samples needs to be in rows
otu.table <- t(as.data.frame(otu_table(ps.sv)))
# calculating niche width
B.value <- as.data.frame(t(niche.width(otu.table, method = "shannon"))) %>%
rownames_to_column(var="SV") %>%
rename(B.value=V1)
B.value.0 <-B.value %>%
filter(B.value==0)
nrow(B.value.0)/(nrow(B.value))*100  # 74% of SVs are specialists
# inclusind collection time
collection_time <- read_excel("../../../../../../../Accessions to choose/datasets/Stations_collection_year.xlsx") %>%
select(ACCESION, 'COLLECTED YEAR') %>%
rename(Sample_ID=ACCESION, C.year='COLLECTED YEAR') %>%
mutate(Sample_ID=str_squish(Sample_ID)) %>%
mutate(Sample_ID=str_remove(Sample_ID, " "), C.year=as.numeric(C.year)) %>%
mutate(C.year.d=C.year-2019) %>%
mutate(C.year.d=C.year.d*-1)
samp.data <- left_join(samp.data, collection_time)
# reading in sample data
samp.data <- data.frame(sample_data(ps.sv))
# inclusind collection time
collection_time <- read_excel("../../../../../../../Accessions to choose/datasets/Stations_collection_year.xlsx") %>%
select(ACCESION, 'COLLECTED YEAR') %>%
rename(Sample_ID=ACCESION, C.year='COLLECTED YEAR') %>%
mutate(Sample_ID=str_squish(Sample_ID)) %>%
mutate(Sample_ID=str_remove(Sample_ID, " "), C.year=as.numeric(C.year)) %>%
mutate(C.year.d=C.year-2019) %>%
mutate(C.year.d=C.year.d*-1)
samp.data <- left_join(samp.data, collection_time)
View(samp.data)
ps.sv <- readRDS("../../Phyloseq_data/ps_sv_PVC.rds")
ps.sv@sam_data <- sample_data(samp.data)
sample_data(ps.sv)
colnames(sample_data(ps.sv))
saveRDS(ps.sv, file = "../../Phyloseq_data/ps_sv_PVC.rds")
ps.sv <- readRDS("../../Phyloseq_data/ps_sv_PVC.rds")
# Removing SVs that based on 1% prevalence and 20 reads abundance
ps.sv <- phyloseq_filter_prevalence(ps.sv, prev.trh = 0.01, abund.trh = 20, threshold_condition = "OR", abund.type = "total")
# reading in sample data
samp.data <- data.frame(sample_data(ps.sv))
# making otu table as mv abund object
otu.MV <- mvabund(otu.table)
#fitting the null model
ft_reveg0=manyglm(otu.MV ~1, data=samp.data)
# offset as difference between total counts peer sample and the NULL model
QDoffset = log(rowSums(otu.MV)) - log(rowSums(predict.manyglm(ft_reveg0)))
# #best explanatory variables
microb_1 <- manyglm(otu.MV~1,data = samp.data) # intercept only model for all samples
ps.sv <- readRDS("../../Phyloseq_data/ps_sv_PVC.rds")
# Removing SVs that based on 1% prevalence and 20 reads abundance
ps.sv <- phyloseq_filter_prevalence(ps.sv, prev.trh = 0.01, abund.trh = 20, threshold_condition = "OR", abund.type = "total")
# reading in sample data
samp.data <- data.frame(sample_data(ps.sv))
# making otu table as mv abund object
otu.MV <- mvabund(otu.table)
#fitting the null model
ft_reveg0=manyglm(otu.MV ~1, data=samp.data)
# offset as difference between total counts peer sample and the NULL model. This account for different sequencing depths
QDoffset = log(rowSums(otu.MV)) - log(rowSums(predict.manyglm(ft_reveg0)))
# #best explanatory variables
microb_1 <- manyglm(otu.MV~1,data = samp.data) # intercept only model for all samples
samp.data2 <- samp.data %>%
dplyr::select(Subpopulation, Status, Dom_event,   12:24, -Weight,)
devs = rep(NA,ncol(samp.data3))
names(devs) = colnames(samp.data3)
devs = rep(NA,ncol(samp.data2))
names(devs) = colnames(samp.data2)
devs
# loop to calculate the AIC for each variable
for (iVar in 1:ncol(samp.data3)) {
spid_glmi = manyglm(otu.MV~samp.data3[,iVar],offset = QDoffset,data = samp.data3)
devs[iVar] = spid_glmi$AICsum
}
# loop to calculate the AIC for each variable
for (iVar in 1:ncol(samp.data2)) {
spid_glmi = manyglm(otu.MV~samp.data2[,iVar],offset = QDoffset,data = samp.data2)
devs[iVar] = spid_glmi$AICsum
}
aic <- data.frame(aic=devs, var=names(devs))
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
theme_Publication(base_size = 11)+
ylab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(70000, 80000)) +
# the best variable for plant phenotypes is Ca. Now we refit the model to consider Regeneration site and Collection year.
# We standardize the quantitative variables first.
# Scaling Ca and Collection year, considering reg site and collection year.
samp.data3 <- samp.data %>%
mutate_at(c("Ca","C.year"), ~(scale(.) %>% as.vector))
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
theme_bw(base_size = 11)+
ylab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(70000, 80000)) +
# the best variable for plant phenotypes is Ca. Now we refit the model to consider Regeneration site and Collection year.
# We standardize the quantitative variables first.
# Scaling Ca and Collection year, considering reg site and collection year.
samp.data3 <- samp.data %>%
mutate_at(c("Ca","C.year"), ~(scale(.) %>% as.vector))
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
ylab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(70000, 80000)) +
# the best variable for plant phenotypes is Ca. Now we refit the model to consider Regeneration site and Collection year.
# We standardize the quantitative variables first.
# Scaling Ca and Collection year, considering reg site and collection year.
samp.data3 <- samp.data %>%
mutate_at(c("Ca","C.year"), ~(scale(.) %>% as.vector))
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
ylab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(70000, 80000))
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
xlab("AIC")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(70000, 80000))
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
xlab("AIC")+
ylab("Variable")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(70000, 80000))
samp.data3 <- samp.data %>%
mutate_at(c("Ca","C.year"), ~(scale(.) %>% as.vector))
glm_best2 = manyglm(otu.MV~Ca+C.year+Regeneration_site,offset = QDoffset,data = samp.data3)
anova_PVC_120 <- readRDS("../../data/mvabund_data/anova_vulgaris_120.rds")
K=120 # cores
N=1  #bootstrapping
pi_Ca <- map_dbl(anova_PVC_120, ~ .x$table[2,4])
piMean_Ca = mean(pi_Ca)
p_Ca = piMean_Ca + (piMean_Ca-1)*(K-1)/(K*N+1) # Ca is significant
p_Ca
(p_Ca = piMean_Ca + (piMean_Ca-1)*(K-1)/(K*N+1)) # Ca is significant
pi_time <- map_dbl(anova_PVC_120, ~ .x$table[3,4])
piMean_time = mean(pi_time)
p_time = piMean_time + (piMean_time-1)*(K-1)/(K*N+1) # Sampling time is not significant
p_time
# p-value for Regeneratino site
pi_site <- map_dbl(anova_PVC_120, ~ .x$table[4,4])
piMean_site = mean(pi_site)
(p_site = piMean_site + (piMean_site-1)*(K-1)/(K*N+1)) # Regeneration site is not significant
anova_PVC_1080 <- readRDS("../../data/mvabund_data/anova_vulgaris_1080.rds")
# indicator species
out <- anova(glm_best3, nBoot=1,test="LR", p.uni = "adjust") # number of bootstrapping affects p.value only, not deviance explained
# Therefore, the minimum adeguate model contains Ca only.
glm_best3 = manyglm(otu.MV~Ca,offset = QDoffset,data = samp.data)
# indicator species
out <- anova(glm_best3, nBoot=1,test="LR", p.uni = "adjust") # number of bootstrapping affects p.value only, not deviance explained
# 65% of the model is explaiend by 300 SVs
(sum(sort(out$uni.test[2,], decreasing = TRUE)[1:300]))/out$table[2,3]*100
coef <- data.frame(Ca=glm_best3$coefficients[2,], SV=names(glm_best3$coefficients[2,]))
ps.sv <- readRDS("../../data/Phyloseq_data/ps_sv_PVC.rds")
ps.filt <- phyloseq_filter_prevalence(ps.sv, prev.trh = 0.05, abund.trh = NULL, threshold_condition = "OR", abund.type = "total")
# taxas filtered at 5% prevalence
tax.table <- data.frame(tax_table(ps.filt))
tax.table$SV <- rownames(tax.table)
# combining coefficients for taxa present at 5% prevalence
taxmtab.coef <- left_join(tax.table, coef)
taxmtab.coef %>%
filter(Phylum%in%c("Proteobacteria", "Acidobacteriota", "Actinobacteriota", "Bacteroidota", "Deinococcota", "Firmicutes")) %>%
mutate(Ca=ifelse(Ca<0,"Negative", "Positive")) %>%
group_by(Phylum, Ca) %>%
summarise(amount=n()) %>%
ungroup() %>%
group_by(Phylum) %>%
mutate(tot=sum(amount), r.a=(amount/tot)*100) %>%
ggplot()+
geom_bar(aes(Phylum,r.a,fill=Ca),stat="identity", color="black")+
ylab("Relative importance of coefficients")+
theme_Publication(base_size = 11)+
theme(axis.text.x = element_text(
size = 12, angle = 45, hjust = 1), axis.text.y=element_blank(),
axis.ticks.y=element_blank())
taxmtab.coef %>%
filter(Phylum%in%c("Proteobacteria", "Acidobacteriota", "Actinobacteriota", "Bacteroidota", "Deinococcota", "Firmicutes")) %>%
mutate(Ca=ifelse(Ca<0,"Negative", "Positive")) %>%
group_by(Phylum, Ca) %>%
summarise(amount=n()) %>%
ungroup() %>%
group_by(Phylum) %>%
mutate(tot=sum(amount), r.a=(amount/tot)*100) %>%
ggplot()+
geom_bar(aes(Phylum,r.a,fill=Ca),stat="identity", color="black")+
ylab("Relative importance of coefficients")+
theme(axis.text.x = element_text(
size = 12, angle = 45, hjust = 1), axis.text.y=element_blank(),
axis.ticks.y=element_blank())
# samples needs to be in rows
tax.table <- as.data.frame(tax_table(ps.filt))
tax.table$SV <- rownames(tax.table)
rownames(tax.table) <- NULL
# tax table
otu.table <- t(as.data.frame(otu_table(ps.filt)))
# reading in sample data
samp.data <- data.frame(sample_data(ps.filt))
# making otu table as mv abund object
otu.MV <- mvabund(otu.table)
#fitting the null model
ft_reveg0=manyglm(otu.MV ~1, data=samp.data)
# offset as difference between total counts peer sample and the NULL model
QDoffset = log(rowSums(otu.MV)) - log(rowSums(predict.manyglm(ft_reveg0)))
glm_Ca.filt = manyglm(otu.MV~ Ca, data = samp.data, offset = QDoffset)
anova_Ca_filt <- readRDS("../../data/mvabund_data/anova_vulgaris_999_filt.rds")
out_Ca_filt$uni.p
anova_Ca_filt$uni.p
# data frame of p values
puni <- data.frame(SV=names(anova_Ca_filt$uni.p[2,]), p.uni=anova_Ca_filt$uni.p[2,])
# p values lower than 0.05
puni <- puni %>%
filter(p.uni<0.05)
glm_Ca.filt$stderr.coefficients
coef <- data.frame(Ca=glm_Ca.filt$coefficients[2,], SV=names(glm_Ca.filt$coefficients[2,]), se=glm_Ca.filt$stderr.coefficients[2,])
coef <- left_join(puni,coef)
taxtablecoef <- left_join(coef, tax.table) %>%
mutate(taxonomy=paste0(SV, ";",Phylum, ";", Class, ";", Order, ";", Family, ";", Genus, ";", Species)) %>%
select(Ca, se, taxonomy,SV)
# CI at 95%
ggplot(taxtablecoef, aes(SV, Ca))+
geom_point()+
geom_pointrange(aes(ymin=Ca-2*se, ymax=Ca+2*se))+
coord_flip()+
theme_Publication()
# CI at 95%
ggplot(taxtablecoef, aes(SV, Ca))+
geom_point()+
geom_pointrange(aes(ymin=Ca-2*se, ymax=Ca+2*se))+
coord_flip()
library(mvabund)
library(lattice)
library(gllvm)
library(corrplot)
library(phyloseq)
library(tidyverse)
library(metagMisc)
library(metacoder)
library(parallel)
library(readxl)
library(metacoder)
library(spaa)
library(gllvm)
ps.sv <- readRDS("../../data/Phyloseq_data/ps_sv_PVC.rds")
# Removing SVs that based on 1% prevalence and 20 reads abundance
ps.sv <- phyloseq_filter_prevalence(ps.sv, prev.trh = 0.01, abund.trh = 20, threshold_condition = "OR", abund.type = "total")
# reading in sample data
samp.data <- data.frame(sample_data(ps.sv))
# making otu table as mv abund object
otu.MV <- mvabund(otu.table)
otu.table <- data.frame(otu_table(ps.sv))
# making otu table as mv abund object
otu.MV <- mvabund(otu.table)
#fitting the null model
ft_reveg0=manyglm(otu.MV ~1, data=samp.data)
# offset as difference between total counts peer sample and the NULL model. This account for different sequencing depths
QDoffset = log(rowSums(otu.MV)) - log(rowSums(predict.manyglm(ft_reveg0)))
View(otu.table)
otu.table <- data.frame(t(otu_table(ps.sv)))
# making otu table as mv abund object
otu.MV <- mvabund(otu.table)
View(otu.MV)
#fitting the null model
ft_reveg0=manyglm(otu.MV ~1, data=samp.data)
# offset as difference between total counts peer sample and the NULL model. This account for different sequencing depths
QDoffset = log(rowSums(otu.MV)) - log(rowSums(predict.manyglm(ft_reveg0)))
otu.table <- t(as.data.frame(otu_table(ps.sv)))
# making otu table as mv abund object
otu.MV <- mvabund(otu.table)
#fitting the null model
ft_reveg0=manyglm(otu.MV ~1, data=samp.data)
# offset as difference between total counts peer sample and the NULL model. This account for different sequencing depths
QDoffset = log(rowSums(otu.MV)) - log(rowSums(predict.manyglm(ft_reveg0)))
samp.data2 <- samp.data %>%
dplyr::select(Subpopulation, Status, Dom_event,   12:24, -Weight,)
devs = rep(NA,ncol(samp.data2))
names(devs) = colnames(samp.data2)
# loop to calculate the AIC for each variable
for (iVar in 1:ncol(samp.data2)) {
glmi = manyglm(otu.MV~samp.data2[,iVar],offset = QDoffset,data = samp.data2)
devs[iVar] = glmi$AICsum
}
aic <- data.frame(aic=devs, var=names(devs))
aic %>%
mutate(var = fct_reorder(var, desc(aic))) %>%
ggplot(., aes(aic, var))+
geom_bar(stat = "identity", fill="red", color="black", alpha=0.5)+
xlab("AIC")+
ylab("Variable")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))+
coord_cartesian(xlim = c(70000, 80000))
ps.sv <- readRDS("../../data/Phyloseq_data/ps_sv_PVC.rds")
ps.filt <- phyloseq_filter_prevalence(ps.sv, prev.trh = 0.05, abund.trh = NULL, threshold_condition = "OR", abund.type = "total")
# taxas filtered at 5% prevalence
tax.table <- data.frame(tax_table(ps.filt))
tax.table$SV <- rownames(tax.table)
# combining coefficients for taxa present at 5% prevalence
taxmtab.coef <- left_join(tax.table, coef)
